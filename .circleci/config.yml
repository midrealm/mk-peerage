# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.7.2-node-browsers
         environment:
         - RAILS_ENV: test
         - DATABASE_HOST: 127.0.0.1
         - POSTGRES_USER: root
         - POSTGRES_PASSWORD: ''
         - POSTGRES_DB: circle-test_test
         - BASH_ENV: /home/circleci/.profile
         - SELENIUM_DRIVER_URL: http://localhost:4444/wd/hub
         - CAPYBARA_APP_HOST: http://localhost:4000
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/postgres:9.5.18
         environment:
         - POSTGRES_USER: root
         - POSTGRES_DB: circle-test_test
       - image: selenium/standalone-chrome

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: "Get Vim"
          command: sudo apt-get update -yqq && sudo apt-get install -yqq --no-install-recommends vim

      - run:
         name: "Update Node.js and npm"
         command: |
           curl -sSL "https://nodejs.org/dist/v12.18.4/node-v12.18.4-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v12.18.4-linux-x64/bin/node
           curl https://www.npmjs.com/install.sh | sudo bash

      - run:
          name: Check current version of node
          command: node -v

      - run: 
          name: "Update Yarn"
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.5 
            echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> $BASH_ENV

      - run:
          name: Check current version of yarn
          command: yarn -v
    
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        
      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      #webpacker
      - run: bundle exec rails assets:precompile

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
